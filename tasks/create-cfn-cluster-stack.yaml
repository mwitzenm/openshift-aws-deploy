---
- name: Create cloudformation cluster stack
  cloudformation:
    stack_name: "{{ stack_name }}"
    state: "present"
    region: "{{ region }}"
    template: "cfn-templates/greenfield.json"
    template_parameters:
      AvailabilityZone: "{{ availability_zone }}"
      Route53HostedZone: "{{ public_hosted_zone }}."
      PublicHostedZone: "{{ public_hosted_zone }}"
      MasterApiPort: "{{ console_port }}"
      MasterHealthTarget: "TCP:{{ console_port }}"
      MasterClusterHostname: "{{ openshift_master_cluster_hostname }}"
      MasterClusterPublicHostname: "{{ openshift_master_cluster_public_hostname }}"
      AppWildcardDomain: "*.{{ wildcard_zone }}"
      VpcCidrBlock: "{{ cidr_block }}"
      VpcName: "{{ vpc_prefix }}"
      SubnetCidrBlocks: "{{ subnet_blocks }}"
      KeyName: "{{ keypair }}"
      MasterInstanceType: "{{ master_instance_type }}"
      AmiId: "{{ ami }}"
      BastionInstanceType: "{{ bastion_instance_type }}"
      BastionUserData: "{{ lookup('file', 'user_data_bastion.yml') | b64encode }}"
      MasterRootVolSize: "10"
      BastionRootVolType: gp2
      MasterRootVolType: gp2
      MasterDockerVolSize: "{{ docker_storage }}"
      MasterDockerVolType: gp2
      MasterEtcdVolSize: "{{ etcd_storage }}"
      MasterEtcdVolType: gp2
      MasterEmptyVolSize: "5"
      MasterEmptyVolType: gp2
      MasterUserData: "{{ lookup('file', 'user_data_master.yml') | b64encode }}"
      InfraInstanceType: "{{ node_instance_type }}"
      InfraRootVolSize: "15"
      InfraRootVolType: gp2
      InfraDockerVolSize: "{{ docker_storage }}"
      InfraDockerVolType: gp2
      NodeEmptyVolSize: "{{ emptydir_storage }}"
      NodeEmptyVolType: gp2
      NodeUserData: "{{ lookup('file', 'user_data_node.yml') | b64encode }}"
      AppNodeInstanceType: "{{ app_instance_type }}"
      NodeRootVolSize: "15"
      NodeRootVolType: gp2
      NodeDockerVolSize: "{{ docker_storage }}"
      NodeDockerVolType: gp2
      S3BucketName: "{{ s3_bucket_name }}"
      S3User: "{{ s3_username }}"
    tags:
      KubernetesCluster: "{{ stack_name }}"